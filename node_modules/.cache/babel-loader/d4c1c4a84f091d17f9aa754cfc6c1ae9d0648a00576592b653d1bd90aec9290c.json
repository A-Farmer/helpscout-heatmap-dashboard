{"ast":null,"code":"var _jsxFileName = \"/Users/adamfarmer/Documents/support-heatmap-dashboard/src/TeamMemberView.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamMemberView = ({\n  heatmapData,\n  uniqueEmails,\n  selectedDay,\n  getColor\n}) => {\n  // Format hour for display\n  const formatHour = hour => {\n    const ampm = hour >= 12 ? 'PM' : 'AM';\n    const h = hour % 12 || 12;\n    return `${h} ${ampm}`;\n  };\n\n  // Find the maximum value for color scaling for all team members\n  const findMaxValue = () => {\n    if (!heatmapData[selectedDay]) return 1;\n    let max = 1;\n    uniqueEmails.forEach(email => {\n      Object.values(heatmapData[selectedDay]).forEach(hourData => {\n        const value = hourData.byEmail[email] || 0;\n        if (value > max) max = value;\n      });\n    });\n    return max;\n  };\n  const maxValue = findMaxValue();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 overflow-x-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-medium mb-2\",\n      children: [\"Team Member View for \", selectedDay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider sticky left-0 bg-gray-50 z-10\",\n            children: \"Team Member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), Array.from({\n            length: 24\n          }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border-b border-gray-200 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\",\n            children: formatHour(hour)\n          }, hour, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border-b border-gray-200 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [uniqueEmails.map((email, emailIndex) => {\n          // Calculate total responses for this team member on the selected day\n          let totalResponses = 0;\n          if (heatmapData[selectedDay]) {\n            Object.values(heatmapData[selectedDay]).forEach(hourData => {\n              totalResponses += hourData.byEmail[email] || 0;\n            });\n          }\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3 border-b border-gray-200 text-sm font-medium sticky left-0 bg-white z-10\",\n              children: email.split('@')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), Array.from({\n              length: 24\n            }).map((_, hour) => {\n              const value = heatmapData[selectedDay] && heatmapData[selectedDay][hour] ? heatmapData[selectedDay][hour].byEmail[email] || 0 : 0;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3 border-b border-gray-200 text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 rounded-md text-center\",\n                  style: {\n                    backgroundColor: getColor(value, maxValue),\n                    color: value > maxValue * 0.6 ? 'white' : 'black',\n                    minWidth: '30px'\n                  },\n                  children: value || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this)\n              }, hour, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3 border-b border-gray-200 text-center font-medium\",\n              children: totalResponses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, emailIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border-b border-gray-200 text-sm font-medium sticky left-0 bg-gray-50 z-10\",\n            children: \"Hour Totals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), Array.from({\n            length: 24\n          }).map((_, hour) => {\n            const hourTotal = heatmapData[selectedDay] && heatmapData[selectedDay][hour] ? heatmapData[selectedDay][hour].total : 0;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3 border-b border-gray-200 text-center font-medium\",\n              children: hourTotal\n            }, hour, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border-b border-gray-200 text-center font-medium\",\n            children: heatmapData[selectedDay] ? Object.values(heatmapData[selectedDay]).reduce((sum, hourData) => sum + hourData.total, 0) : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = TeamMemberView;\nexport default TeamMemberView;\nvar _c;\n$RefreshReg$(_c, \"TeamMemberView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TeamMemberView","heatmapData","uniqueEmails","selectedDay","getColor","formatHour","hour","ampm","h","findMaxValue","max","forEach","email","Object","values","hourData","value","byEmail","maxValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","map","_","emailIndex","totalResponses","split","style","backgroundColor","color","minWidth","hourTotal","total","reduce","sum","_c","$RefreshReg$"],"sources":["/Users/adamfarmer/Documents/support-heatmap-dashboard/src/TeamMemberView.js"],"sourcesContent":["import React from 'react';\n\nconst TeamMemberView = ({ \n  heatmapData, \n  uniqueEmails, \n  selectedDay, \n  getColor \n}) => {\n  // Format hour for display\n  const formatHour = (hour) => {\n    const ampm = hour >= 12 ? 'PM' : 'AM';\n    const h = hour % 12 || 12;\n    return `${h} ${ampm}`;\n  };\n\n  // Find the maximum value for color scaling for all team members\n  const findMaxValue = () => {\n    if (!heatmapData[selectedDay]) return 1;\n    \n    let max = 1;\n    uniqueEmails.forEach(email => {\n      Object.values(heatmapData[selectedDay]).forEach(hourData => {\n        const value = hourData.byEmail[email] || 0;\n        if (value > max) max = value;\n      });\n    });\n    \n    return max;\n  };\n\n  const maxValue = findMaxValue();\n\n  return (\n    <div className=\"mt-4 overflow-x-auto\">\n      <h2 className=\"text-lg font-medium mb-2\">Team Member View for {selectedDay}</h2>\n      <table className=\"min-w-full bg-white\">\n        <thead>\n          <tr>\n            <th className=\"p-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider sticky left-0 bg-gray-50 z-10\">\n              Team Member\n            </th>\n            {Array.from({ length: 24 }).map((_, hour) => (\n              <th \n                key={hour} \n                className=\"p-3 border-b border-gray-200 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\"\n              >\n                {formatHour(hour)}\n              </th>\n            ))}\n            <th className=\"p-3 border-b border-gray-200 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n              Total\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {uniqueEmails.map((email, emailIndex) => {\n            // Calculate total responses for this team member on the selected day\n            let totalResponses = 0;\n            if (heatmapData[selectedDay]) {\n              Object.values(heatmapData[selectedDay]).forEach(hourData => {\n                totalResponses += hourData.byEmail[email] || 0;\n              });\n            }\n\n            return (\n              <tr key={emailIndex}>\n                <td className=\"p-3 border-b border-gray-200 text-sm font-medium sticky left-0 bg-white z-10\">\n                  {email.split('@')[0]}\n                </td>\n                {Array.from({ length: 24 }).map((_, hour) => {\n                  const value = heatmapData[selectedDay] && \n                    heatmapData[selectedDay][hour] ? \n                    heatmapData[selectedDay][hour].byEmail[email] || 0 : 0;\n                  \n                  return (\n                    <td key={hour} className=\"p-3 border-b border-gray-200 text-center\">\n                      <div \n                        className=\"p-2 rounded-md text-center\"\n                        style={{\n                          backgroundColor: getColor(value, maxValue),\n                          color: value > maxValue * 0.6 ? 'white' : 'black',\n                          minWidth: '30px'\n                        }}\n                      >\n                        {value || ''}\n                      </div>\n                    </td>\n                  );\n                })}\n                <td className=\"p-3 border-b border-gray-200 text-center font-medium\">\n                  {totalResponses}\n                </td>\n              </tr>\n            );\n          })}\n          <tr className=\"bg-gray-50\">\n            <td className=\"p-3 border-b border-gray-200 text-sm font-medium sticky left-0 bg-gray-50 z-10\">\n              Hour Totals\n            </td>\n            {Array.from({ length: 24 }).map((_, hour) => {\n              const hourTotal = heatmapData[selectedDay] && \n                heatmapData[selectedDay][hour] ? \n                heatmapData[selectedDay][hour].total : 0;\n              \n              return (\n                <td key={hour} className=\"p-3 border-b border-gray-200 text-center font-medium\">\n                  {hourTotal}\n                </td>\n              );\n            })}\n            <td className=\"p-3 border-b border-gray-200 text-center font-medium\">\n              {/* Calculate grand total */}\n              {heatmapData[selectedDay] ? \n                Object.values(heatmapData[selectedDay]).reduce((sum, hourData) => sum + hourData.total, 0) : 0}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TeamMemberView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}